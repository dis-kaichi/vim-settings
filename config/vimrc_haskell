""" 共通設定読み込み
let language = 'haskell'
let s:common_vimrc = expand('~/my/config/vimrc_common')
if filereadable(s:common_vimrc)
  execute 'source ' . s:common_vimrc
endif

" vim-lsp設定

if executable('haskell-language-server-wrapper')
  au User lsp_setup call lsp#register_server({
            \ 'name': 'haskell-ls',
            \ 'cmd': {server_info->['haskell-language-server-wrapper', '--lsp']},
            \ 'root_uri':{server_info->lsp#utils#path_to_uri(
            \     lsp#utils#find_nearest_parent_file_directory(
            \         lsp#utils#get_buffer_path(),
            \         ['.cabal', 'stack.yaml', 'cabal.project', 'package.yaml', 'hie.yaml', '.git'],
            \     ))},
            \ 'allowlist': ['haskell', 'lhaskell'],
            \ })
endif

" Haskell 実行
"" main を実行する
nnoremap [Exec] <Nop>
nmap <C-t> [Exec]
" 通常のghc
map <silent> [Exec]e :!ghc -e main %<CR>
" AtCoder用
map <silent> [Exec]t :!oj t -c ' runghc %' -d ./tests/<CR>
" stackを利用する設定(2016/12/03)
map <silent> [Exec]s :!stack setup <CR>
map <silent> [Exec]b :!stack build <CR>
""" プロジェクトのルートからファイルを編集している想定
""" ルートにあるcabalファイルがプロジェクト名になっているので、それを探しに行くことで対応
map <silent> [Exec]p :execute('!stack exec ' . fnamemodify(expand("**/*.cabal"), ":r")) . '-exe' <CR>
" (2021/11/03)
map <silent> [Exec]r :!stack runghc %<CR>
map <silent> [Exec]i :!stack ghci %<CR>


" ----------------------------------------
"  設定関連
" ----------------------------------------
"  vim2hsのラムダを止める
let g:haskell_conceal = 0
