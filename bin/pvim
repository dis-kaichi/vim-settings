#!/usr/bin/env python2.7
# coding: utf-8
import argparse
import os


def _create_parser():  # Parserの作成
    parser = argparse.ArgumentParser()
    parser.add_argument('-c', '--config', help='Config file.(.vimrc)')
    parser.add_argument('files', nargs='*', default=[], help='Files to open.')
    # Option追加
    for dic in _create_options():
        parser.add_argument(
            '-%s' % (dic.get('short')),
            '--%s' % (dic.get('type')),
            action=dic.get('action'),
            help=dic.get('help'))
    return parser


def _create_options():
    # Optionの生成
    return [
        # specifyは何か特別な条件があれば利用する
        dict(
            short='hatena', type='hatenablog', action='store_true',
            help="HatenaBlog Mode", specify=False),
    ]

def _generate_config_fname(_type):
    # 引数のタイプからConfigファイル名を生成する
    if _type == "js":
        return "vimrc_js"
    elif _type in ["clj", "cljs"]:
        return "vimrc_clojure"
    elif _type == "hs":
        return "vimrc_haskell"
    elif _type == "py":
        return "vimrc_python"
    elif _type == "ts":
        return "vimrc_typescript"
    elif _type == "fr":
        return "vimrc_frege"
    elif _type == "hy":
        return "vimrc_hylang"
    elif _type in ["cl", "lisp"]:
        return "vimrc_lisp"
    elif _type == "hatena":
        return "vimrc_hatenablog"
    elif _type == "v":
        return "vimrc_coq"
    elif _type in ["md", "markdown"]:
        return "vimrc_markdown"
    # 不明な場合はpythonのやつ
    print "(WARN) Unknown file extension"
    print "(MSG) Use python config."
    return "vimrc_python"

def _extract_extension(filename):
    u"""
    ファイル名より拡張子を取得する
    """
    _, ext = os.path.splitext(filename)
    if ext != "":
        ext = ext[1:]  # "."(dot)を除外
        return ext


def _with_config_dir(name):
    # Configファイル格納フォルダへのパスを附与する
    return "~/my/config/{0}".format(name)

if __name__ == '__main__':
    parser = _create_parser()
    args = parser.parse_args()

    # 引数のファイル群取得
    if not args.files:  # ファイルが存在しない
        files = ''
    else:
        files = " ".join(args.files)

    if args.config is None:
        if args.files:
            # 先頭ファイルの拡張子より利用するConfigファイルを判定する
            _type = _extract_extension(args.files[0])
        elif args.hatenablog:
            _type = "hatena"
        else:
            # ファイルがない場合はDefault設定
            _type = None
        config = _with_config_dir(_generate_config_fname(_type))
    else:
        # 直接指定がある場合は引数のconfigを利用する
        config = args.config

    # 起動
    os.system('vim -u %s %s' % (config, files))
